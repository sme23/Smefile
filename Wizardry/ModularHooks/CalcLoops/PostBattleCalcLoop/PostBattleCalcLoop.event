
	/* Post-battle calculation loop*/

PUSH
ORG $1D2B8 //this used to set state to "cantoing", it's just there to make sure galeforce has priority
jumpToHack(CheckGaleforce)
//ORG $39BDC //this added 1 to make the ai move the next unit
POP

ALIGN 4
CheckGaleforce: //decides if the unit should be cantoing or not
#incbin "Galeforce/checkgaleforce.dmp"

PUSH //some changes to vanilla code to make everything work
ORG $1D24C //check for canto, modified to just check for cantoing bit set
SHORT 0x7b18 0x2102 0x4001 0x2902 0xd020 0x2140 0x4008 0x46c0 0x2800 //galeforce does not autoselect the unit
ORG $18754 //this used to set state to "turn ended"
SHORT 0x46C0
ORG $1D264 //this used to be part of the "check if already cantoing"
SHORT 0x2000
ORG $1D26C //this used to be part of the "check for this turn's action"
SHORT 0x2110
ORG $323A0 //making dance not clear the galeforce flag
SHORT 0xFFBD
SHORT 0xFFFF
ORG $39B98 //this sets 00040000 to the status bitfield thing for some reason on non-player units
SHORT 0x46C0
POP

PUSH
ORG $1D308 //hook just before the check for misc event
jumpToHack(PostCombatLoop)
POP

ALIGN 4
PostCombatLoop:
#incbin "post_loop.dmp"
POIN PostCombatSkills

PostCombatSkills: //I like having savage blow as the first one because it makes the activation sound play first
POIN Canto CantoPlus
POIN IncDecLaguzBarsPerBattle //gain or lose bar from battle
POIN HastePostBattle //refresh if haste effect is applied & haven't yet
POIN PostCombatIncrementFatigue PostCombatStaffIncrementFatigue 
WORD 0 //Terminator

//non-skill Canto & Canto+
//Canto+ is given to units if promoted and have the Canto flag
#include "Canto/Canto.lyn.event"
#include "Canto/CantoPlus.lyn.event"

PROTECT $1D308 $1D314
